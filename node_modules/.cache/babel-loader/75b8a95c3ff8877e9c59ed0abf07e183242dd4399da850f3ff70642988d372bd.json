{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vinay Hajare\\\\React Projects\\\\music-streaming-frontend\\\\src\\\\context\\\\PlayerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerContext = /*#__PURE__*/createContext();\nexport const PlayerProvider = ({\n  children\n}) => {\n  _s();\n  const [currentSong, setCurrentSong] = useState(null); // Current playing Song\n\n  const playSong = song => {\n    setCurrentSong(song); // Set the current song\n  };\n  const clearSong = () => {\n    setCurrentSong(null); // Clear the current song\n  };\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      currentSong,\n      playSong,\n      clearSong\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerProvider, \"0TccstMgsgIYrZ+wsHop45pUns4=\");\n_c = PlayerProvider;\nexport const usePlayer = () => {\n  _s2();\n  return useContext(PlayerContext);\n};\n_s2(usePlayer, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"PlayerProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","PlayerContext","PlayerProvider","children","_s","currentSong","setCurrentSong","playSong","song","clearSong","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlayer","_s2","$RefreshReg$"],"sources":["D:/Vinay Hajare/React Projects/music-streaming-frontend/src/context/PlayerContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\n\r\nconst PlayerContext = createContext();\r\n\r\nexport const PlayerProvider = ({ children }) => {\r\n  const [currentSong, setCurrentSong] = useState(null); // Current playing Song\r\n\r\n  const playSong = (song) => {\r\n    setCurrentSong(song); // Set the current song\r\n  };\r\n\r\n  const clearSong = () => {\r\n    setCurrentSong(null); // Clear the current song\r\n  };\r\n\r\n  return (\r\n    <PlayerContext.Provider\r\n      value={{\r\n        currentSong,\r\n        playSong,\r\n        clearSong,\r\n      }}\r\n    >\r\n      {children}\r\n    </PlayerContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePlayer = () => useContext(PlayerContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD,MAAMU,QAAQ,GAAIC,IAAI,IAAK;IACzBF,cAAc,CAACE,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBH,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEN,OAAA,CAACC,aAAa,CAACS,QAAQ;IACrBC,KAAK,EAAE;MACLN,WAAW;MACXE,QAAQ;MACRE;IACF,CAAE;IAAAN,QAAA,EAEDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACX,EAAA,CAtBWF,cAAc;AAAAc,EAAA,GAAdd,cAAc;AAwB3B,OAAO,MAAMe,SAAS,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpB,UAAU,CAACG,aAAa,CAAC;AAAA;AAACiB,GAAA,CAA5CD,SAAS;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}