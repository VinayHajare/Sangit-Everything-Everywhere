{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vinay Hajare\\\\React Projects\\\\music-streaming-frontend\\\\src\\\\components\\\\Songs\\\\SongList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../../utils/api\";\nimport { usePlayer } from \"../../contexts/PlayerContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongList = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [error, setError] = useState(\"\");\n  const {\n    playSong\n  } = usePlayer();\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await api.get(\"/songs\");\n        setSongs(response.data);\n      } catch (error) {\n        setError(\"Failed to fetch songs. Please try again.\");\n      }\n    };\n    fetchSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-music-background text-white p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-music-primary mb-4\",\n      children: \"Available Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-500 p-3 rounded mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 rounded p-4 shadow hover:shadow-lg transition\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-music-secondary\",\n          children: [\"Artist: \", song.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-music-secondary\",\n          children: [\"Album: \", song.album]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => playSong(song),\n          className: \"mt-4 bg-music-primary text-black py-2 px-2 rounded hover:bg-green-500\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SongList, \"+u7quf264rJAwEm9A9oi/qXxzZk=\", false, function () {\n  return [usePlayer];\n});\n_c = SongList;\nexport default SongList;\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["React","useState","useEffect","api","usePlayer","jsxDEV","_jsxDEV","SongList","_s","songs","setSongs","error","setError","playSong","fetchSongs","response","get","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","title","artist","album","onClick","id","_c","$RefreshReg$"],"sources":["D:/Vinay Hajare/React Projects/music-streaming-frontend/src/components/Songs/SongList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../utils/api\";\r\nimport { usePlayer } from \"../../contexts/PlayerContext\";\r\n\r\nconst SongList = () => {\r\n  const [songs, setSongs] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const { playSong } = usePlayer();\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      try {\r\n        const response = await api.get(\"/songs\");\r\n        setSongs(response.data);\r\n      } catch (error) {\r\n        setError(\"Failed to fetch songs. Please try again.\");\r\n      }\r\n    };\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-music-background text-white p-6\">\r\n      <h1 className=\"text-3xl font-bold text-music-primary mb-4\">\r\n        Available Songs\r\n      </h1>\r\n      {error && <div className=\"bg-red-500 p-3 rounded mb-4\">{error}</div>}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {songs.map((song) => (\r\n          <div\r\n            key={song.id}\r\n            className=\"bg-gray-800 rounded p-4 shadow hover:shadow-lg transition\"\r\n          >\r\n            <h2 className=\"text-xl font-semibold\">{song.title}</h2>\r\n            <p className=\"text-sm text-music-secondary\">\r\n              Artist: {song.artist}\r\n            </p>\r\n            <p className=\"text-sm text-music-secondary\">Album: {song.album}</p>\r\n            <button onClick={() => playSong(song)} className=\"mt-4 bg-music-primary text-black py-2 px-2 rounded hover:bg-green-500\">\r\n              Play\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,SAAS,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEY;EAAS,CAAC,GAAGT,SAAS,CAAC,CAAC;EAEhCF,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,QAAQ,CAAC;QACxCN,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,QAAQ,CAAC,0CAA0C,CAAC;MACtD;IACF,CAAC;IACDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKY,SAAS,EAAC,iDAAiD;IAAAC,QAAA,gBAC9Db,OAAA;MAAIY,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EAAC;IAE3D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJZ,KAAK,iBAAIL,OAAA;MAAKY,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpEjB,OAAA;MAAKY,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEV,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdnB,OAAA;QAEEY,SAAS,EAAC,2DAA2D;QAAAC,QAAA,gBAErEb,OAAA;UAAIY,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAEM,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvDjB,OAAA;UAAGY,SAAS,EAAC,8BAA8B;UAAAC,QAAA,GAAC,UAClC,EAACM,IAAI,CAACE,MAAM;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACJjB,OAAA;UAAGY,SAAS,EAAC,8BAA8B;UAAAC,QAAA,GAAC,SAAO,EAACM,IAAI,CAACG,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnEjB,OAAA;UAAQuB,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACY,IAAI,CAAE;UAACP,SAAS,EAAC,uEAAuE;UAAAC,QAAA,EAAC;QAEzH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAVJE,IAAI,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA1CID,QAAQ;EAAA,QAGSH,SAAS;AAAA;AAAA2B,EAAA,GAH1BxB,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}