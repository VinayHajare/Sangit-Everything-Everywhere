{"ast":null,"code":"import React,{createContext,useState,useEffect}from\"react\";import{jwtDecode}from\"jwt-decode\";import tokenManager from\"../utils/tokenManager\";import api from\"../utils/api\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);useEffect(()=>{const token=tokenManager.getToken();if(token){try{const decodedToken=jwtDecode(token);const username=decodedToken===null||decodedToken===void 0?void 0:decodedToken.username;if(username){const fetchUser=async()=>{try{const response=await api.get(\"/profile/\".concat(username));setUser(response.data);}catch(error){console.error(\"Fetch User Failed: \",error);setUser(null);}};fetchUser();}}catch(error){console.error(\"Decode Token Failed: \",error);tokenManager.clearToken();setUser(null);}}},[]);const login=async(email,password)=>{try{const response=await api.post(\"/auth/login\",{email,password});tokenManager.setToken(response.data.token);setUser(response.data.user);}catch(error){console.error(\"Login Failed: \",error);}};const logout=()=>{tokenManager.clearToken();setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","tokenManager","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","token","getToken","decodedToken","username","fetchUser","response","get","concat","data","error","console","clearToken","login","email","password","post","setToken","logout","Provider","value"],"sources":["D:/Vinay Hajare/React Projects/music-streaming-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport tokenManager from \"../utils/tokenManager\";\r\nimport api from \"../utils/api\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = tokenManager.getToken();\r\n    if (token) {\r\n      try {\r\n        const decodedToken = jwtDecode(token);\r\n        const username = decodedToken?.username;\r\n        if (username) {\r\n          const fetchUser = async () => {\r\n            try {\r\n              const response = await api.get(`/profile/${username}`);\r\n              setUser(response.data);\r\n            } catch (error) {\r\n              console.error(\"Fetch User Failed: \", error);\r\n              setUser(null);\r\n            }\r\n          };\r\n          fetchUser();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Decode Token Failed: \", error);\r\n        tokenManager.clearToken();\r\n        setUser(null);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post(\"/auth/login\", { email, password });\r\n      tokenManager.setToken(response.data.token);\r\n      setUser(response.data.user);\r\n    } catch (error) {\r\n      console.error(\"Login Failed: \", error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    tokenManager.clearToken();\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,OAASC,SAAS,KAAQ,YAAY,CACtC,MAAO,CAAAC,YAAY,KAAM,uBAAuB,CAChD,MAAO,CAAAC,GAAG,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/B,MAAO,MAAM,CAAAC,WAAW,cAAGR,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAS,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,KAAK,CAAGV,YAAY,CAACW,QAAQ,CAAC,CAAC,CACrC,GAAID,KAAK,CAAE,CACT,GAAI,CACF,KAAM,CAAAE,YAAY,CAAGb,SAAS,CAACW,KAAK,CAAC,CACrC,KAAM,CAAAG,QAAQ,CAAGD,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEC,QAAQ,CACvC,GAAIA,QAAQ,CAAE,CACZ,KAAM,CAAAC,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACe,GAAG,aAAAC,MAAA,CAAaJ,QAAQ,CAAE,CAAC,CACtDJ,OAAO,CAACM,QAAQ,CAACG,IAAI,CAAC,CACxB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3CV,OAAO,CAAC,IAAI,CAAC,CACf,CACF,CAAC,CACDK,SAAS,CAAC,CAAC,CACb,CACF,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7CnB,YAAY,CAACqB,UAAU,CAAC,CAAC,CACzBZ,OAAO,CAAC,IAAI,CAAC,CACf,CACF,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAa,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,GAAI,CACF,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACwB,IAAI,CAAC,aAAa,CAAE,CAAEF,KAAK,CAAEC,QAAS,CAAC,CAAC,CACnExB,YAAY,CAAC0B,QAAQ,CAACX,QAAQ,CAACG,IAAI,CAACR,KAAK,CAAC,CAC1CD,OAAO,CAACM,QAAQ,CAACG,IAAI,CAACV,IAAI,CAAC,CAC7B,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACxC,CACF,CAAC,CAED,KAAM,CAAAQ,MAAM,CAAGA,CAAA,GAAM,CACnB3B,YAAY,CAACqB,UAAU,CAAC,CAAC,CACzBZ,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAACwB,QAAQ,EAACC,KAAK,CAAE,CAAErB,IAAI,CAAEc,KAAK,CAAEK,MAAO,CAAE,CAAApB,QAAA,CAClDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}