{"ast":null,"code":"var _jsxFileName = \"D:\\\\Vinay Hajare\\\\React Projects\\\\music-streaming-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport tokenManager from \"../utils/tokenManager\";\nimport api from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = tokenManager.getToken();\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        const username = decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.username;\n        if (username) {\n          const fetchUser = async () => {\n            try {\n              const response = await api.get(`/profile/${username}`);\n              setUser(response.data);\n              navigate(\"/dashboard\"); // Redirect if user is already logged in\n            } catch (error) {\n              console.error(\"Fetch User Failed: \", error);\n              tokenManager.clearToken();\n              setUser(null);\n            }\n          };\n          fetchUser();\n        }\n      } catch (error) {\n        console.error(\"Decode Token Failed: \", error);\n        tokenManager.clearToken();\n        setUser(null);\n      }\n    }\n  }, [navigate]);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post(\"/auth/login\", {\n        email,\n        password\n      });\n      tokenManager.setToken(response.data.token);\n      setUser(response.data.user);\n    } catch (error) {\n      console.error(\"Login Failed: \", error);\n      throw new Error(\"Invalid credentials.\");\n    }\n  };\n  const logout = () => {\n    tokenManager.clearToken();\n    setUser(null);\n    navigate(\"/\"); // Redirect to login page after logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","useNavigate","tokenManager","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","token","getToken","decodedToken","username","fetchUser","response","get","data","error","console","clearToken","login","email","password","post","setToken","Error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Vinay Hajare/React Projects/music-streaming-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport tokenManager from \"../utils/tokenManager\";\r\nimport api from \"../utils/api\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = tokenManager.getToken();\r\n    if (token) {\r\n      try {\r\n        const decodedToken = jwtDecode(token);\r\n        const username = decodedToken?.username;\r\n        if (username) {\r\n          const fetchUser = async () => {\r\n            try {\r\n              const response = await api.get(`/profile/${username}`);\r\n              setUser(response.data);\r\n              navigate(\"/dashboard\"); // Redirect if user is already logged in\r\n            } catch (error) {\r\n              console.error(\"Fetch User Failed: \", error);\r\n              tokenManager.clearToken();\r\n              setUser(null);\r\n            }\r\n          };\r\n          fetchUser();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Decode Token Failed: \", error);\r\n        tokenManager.clearToken();\r\n        setUser(null);\r\n      }\r\n    }\r\n  }, [navigate]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post(\"/auth/login\", { email, password });\r\n      tokenManager.setToken(response.data.token);\r\n      setUser(response.data.user);\r\n    } catch (error) {\r\n      console.error(\"Login Failed: \", error);\r\n      throw new Error(\"Invalid credentials.\");\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    tokenManager.clearToken();\r\n    setUser(null);\r\n    navigate(\"/\"); // Redirect to login page after logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}